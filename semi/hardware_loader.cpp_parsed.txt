Method:HwLoader::load(KameleonCore,conf::ConfigMap);
parameter#core;
parameter#config;
BEGIN_TRY#14;
END_TRY#135;
Usage#try#14;
Usage#std#16;
Usage#vector#16;
Usage#csptr_t#16;
Usage#managerList#16;
Usage#config#16;
Invocation#config.getSections#16;
Usage#CONF_HW_MANAGER#16;
BEGIN_IF#18;
END_IF#19;
Usage#managerList#18;
Invocation#managerList.size#18;
Usage#throw#19;
Usage#std#19;
Usage#invalid_argument#19;
Usage#Ambiguous#19;
Usage#device#19;
Usage#manager#19;
Usage#declaration#19;
Invocation#declaration.#19;
Usage#Multiple#19;
Usage#managers#19;
Usage#declared#19;
Usage#in#19;
Usage#configuration#19;
BEGIN_ELSE#20;
Usage#managerList#20;
Invocation#managerList.size#20;
Usage#throw#21;
Usage#std#21;
Usage#invalid_argument#21;
Usage#No#21;
Usage#hardware#21;
Usage#manager#21;
Usage#has#21;
Usage#been#21;
Usage#declared#21;
Usage#csptr_t#25;
Usage#managerConf#25;
Usage#managerList#25;
Usage#shared_ptr#26;
Usage#DeviceManager#26;
Usage#manager#26;
Usage#std#26;
Usage#make_shared#26;
Usage#DeviceManager#26;
BEGIN_FOR#30;
END_FOR#121;
Usage#csptr_t#30;
Usage#section#30;
Usage#config#30;
Invocation#config.getSections#30;
Usage#CONF_HW_DEVICE#30;
BEGIN_IF#32;
END_IF#33;
Usage#section#32;
Usage#isNull#32;
Usage#type#32;
Usage#throw#33;
Usage#std#33;
Usage#invalid_argument#33;
Usage#Hardware#33;
Usage#device#33;
Usage#declared#33;
Usage#with#33;
Usage#no#33;
Usage#type#33;
Usage#attribute#33;
Usage#std#34;
Usage#string#34;
Usage#type#34;
Usage#section#34;
Usage#getString#34;
Usage#type#34;
Usage#std#36;
Usage#shared_ptr#36;
Usage#HwDevice#36;
Usage#device#36;
BEGIN_IF#38;
END_IF#69;
Usage#type#38;
Usage#sweep_rangefinder#38;
Usage#std#40;
Usage#shared_ptr#40;
Usage#SweepRangeFinder#40;
Usage#tmps#40;
Usage#std#40;
Usage#make_shared#40;
Usage#SweepRangeFinder#40;
BEGIN_IF#41;
END_IF#42;
Usage#section#41;
Usage#isNotNull#41;
Usage#open#41;
Usage#tmps#42;
Usage#setDeviceFile#42;
Usage#section#42;
Usage#getString#42;
Usage#open#42;
BEGIN_ELSE#43;
Usage#throw#44;
Usage#std#44;
Usage#invalid_argument#44;
Usage#should#44;
Usage#specify#44;
Usage#device#44;
Usage#descriptor#44;
Usage#open#44;
Usage#dev#44;
Usage#...#44;
BEGIN_IF#45;
END_IF#46;
Usage#section#45;
Usage#isInt#45;
Usage#default_sample_rate#45;
Usage#tmps#46;
Usage#SetSampleRate#46;
Usage#section#46;
Usage#getInt#46;
Usage#default_sample_rate#46;
BEGIN_IF#47;
END_IF#50;
Usage#section#47;
Usage#isInt#47;
Usage#default_rotation_rate#47;
Usage#tmps#49;
Usage#SetRotationSpeed#49;
Usage#section#49;
Usage#getInt#49;
Usage#default_rotation_rate#49;
Usage#filter_time#52;
Usage#filter_size#52;
Usage#filter_occ#53;
BEGIN_IF#54;
END_IF#55;
Usage#section#54;
Usage#isDouble#54;
Usage#filter_time_window_seconds#54;
Usage#filter_time#55;
Usage#section#55;
Usage#getDouble#55;
Usage#filter_time_window_seconds#55;
BEGIN_IF#56;
END_IF#57;
Usage#section#56;
Usage#isInt#56;
Usage#filter_occurences#56;
Usage#filter_occ#57;
Usage#section#57;
Usage#getInt#57;
Usage#filter_occurences#57;
BEGIN_IF#58;
END_IF#59;
Usage#section#58;
Usage#isDouble#58;
Usage#filter_size_meters#58;
Usage#filter_size#59;
Usage#section#59;
Usage#getDouble#59;
Usage#filter_size_meters#59;
Usage#tmps#60;
Usage#filter#60;
Usage#SetFakeDetectionFilter#60;
Usage#filter_size#60;
Usage#filter_occ#60;
Usage#filter_time#60;
BEGIN_IF#62;
END_IF#67;
Usage#section#62;
Usage#isNotNull#62;
Usage#ignored_azimut_ranges#62;
Usage#std#64;
Usage#vector#64;
Usage#std#64;
Usage#pair#64;
Usage#double#64;
Usage#double#64;
Usage#pairs#64;
Usage#section#64;
Usage#getPairsDoubleDouble#64;
Usage#ignored_azimut_ranges#64;
BEGIN_FOR#65;
END_FOR#66;
Usage#std#65;
Usage#pair#65;
Usage#double#65;
Usage#double#65;
Usage#p#65;
Usage#pairs#65;
Usage#tmps#66;
Usage#filter#66;
Usage#IgnoreAngularRegion#66;
Usage#utils#66;
Usage#Radians#66;
Usage#p#66;
Invocation#p.first#66;
Usage#utils#66;
Usage#Radians#66;
Usage#p#66;
Invocation#p.second#66;
Usage#device#68;
Usage#tmps#68;
BEGIN_ELSE#70;
Usage#type#70;
Usage#rangefinder#70;
BEGIN_IF#81;
END_IF#120;
Usage#device#81;
Usage#utils#84;
Usage#Attitude#84;
Usage#attitude#84;
Usage#utils#85;
Usage#XYZ#85;
Usage#offset#85;
BEGIN_IF#86;
END_IF#87;
Usage#section#86;
Usage#isDouble#86;
Usage#mount_elevation#86;
Usage#attitude#87;
Invocation#attitude.pitch#87;
Usage#utils#87;
Usage#Radians#87;
Usage#section#87;
Usage#getDouble#87;
Usage#mount_elevation#87;
BEGIN_IF#88;
END_IF#89;
Usage#section#88;
Usage#isDouble#88;
Usage#mount_roll#88;
Usage#attitude#89;
Invocation#attitude.roll#89;
Usage#utils#89;
Usage#Radians#89;
Usage#section#89;
Usage#getDouble#89;
Usage#mount_roll#89;
BEGIN_IF#90;
END_IF#91;
Usage#section#90;
Usage#isDouble#90;
Usage#mount_azimuth#90;
Usage#attitude#91;
Invocation#attitude.yaw#91;
Usage#utils#91;
Usage#Radians#91;
Usage#section#91;
Usage#getDouble#91;
Usage#mount_azimuth#91;
BEGIN_IF#92;
END_IF#93;
Usage#section#92;
Usage#isDouble#92;
Usage#mount_offset_x#92;
Usage#offset#93;
Invocation#offset.x#93;
Usage#section#93;
Usage#getDouble#93;
Usage#mount_offset_x#93;
BEGIN_IF#94;
END_IF#95;
Usage#section#94;
Usage#isDouble#94;
Usage#mount_offset_y#94;
Usage#offset#95;
Invocation#offset.y#95;
Usage#section#95;
Usage#getDouble#95;
Usage#mount_offset_y#95;
BEGIN_IF#96;
END_IF#97;
Usage#section#96;
Usage#isDouble#96;
Usage#mount_offset_z#96;
Usage#offset#97;
Invocation#offset.z#97;
Usage#section#97;
Usage#getDouble#97;
Usage#mount_offset_z#97;
Usage#device#98;
Usage#setMountAttitude#98;
Usage#attitude#98;
Usage#device#99;
Usage#setMountOffset#99;
Usage#offset#99;
Usage#std#102;
Usage#shared_ptr#102;
Usage#data#102;
Usage#DataSource#102;
Usage#ptrSource#102;
Usage#std#102;
Usage#dynamic_pointer_cast#102;
Usage#data#102;
Usage#DataSource#102;
Usage#device#102;
BEGIN_IF#103;
END_IF#109;
Usage#ptrSource#103;
Usage#manager#103;
BEGIN_IF#105;
END_IF#106;
Usage#section#105;
Usage#isInt#105;
Usage#source_id#105;
Usage#ptrSource#106;
Usage#setMinorId#106;
Usage#section#106;
Usage#getInt#106;
Usage#source_id#106;
Usage#core#108;
Invocation#core._data#108;
Usage#dataSourceCollection#108;
Usage#registerObject#108;
Usage#ptrSource#108;
Usage#std#112;
Usage#shared_ptr#112;
Usage#hw#112;
Usage#HwDevice#112;
Usage#ptrHardware#112;
Usage#std#112;
Usage#dynamic_pointer_cast#112;
Usage#hw#112;
Usage#HwDevice#112;
Usage#device#112;
BEGIN_IF#113;
END_IF#119;
Usage#ptrHardware#113;
Usage#manager#113;
BEGIN_IF#115;
END_IF#116;
Usage#section#115;
Usage#isInt#115;
Usage#hardware_id#115;
Usage#ptrHardware#116;
Usage#setMinorId#116;
Usage#section#116;
Usage#getInt#116;
Usage#hardware_id#116;
Usage#manager#118;
Usage#collection#118;
Usage#registerObject#118;
Usage#ptrHardware#118;
BEGIN_IF#123;
END_IF#127;
Usage#manager#123;
Usage#core#125;
Invocation#core._hw#125;
Usage#manager#125;
Usage#return#126;
BEGIN_ELSE#128;
Usage#return#129;
BEGIN_CATCH#131;
END_CATCH#135;
Usage#exception#131;
Usage#const#131;
Usage#e#131;
Usage#cout#133;
Usage#e#133;
Invocation#e.what#133;
Usage#endl#133;
Usage#return#134;
